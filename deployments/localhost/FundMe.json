{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe_WithdrawFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "funderIndex",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xd90ff11e673ef5d01ca8f702d54902d111d1875aa58b6ac968e438df5260c0e6",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "929059",
    "logsBloom": "0x
    "blockHash": "0x08acfc1f04e2de98587c198ab5335e2dff039685a3356c923f286df8a718ad33",
    "transactionHash": "0xd90ff11e673ef5d01ca8f702d54902d111d1875aa58b6ac968e438df5260c0e6",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "929059",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "d47a952ba4af75fc4bfd8fc4be98ec25",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe_WithdrawFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"funderIndex\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"tamdc\",\"details\":\"Explain to a developer any extra details\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A demo project to learn solidity\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Explain to an end user what this does\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Pragma\\npragma solidity ^0.8.8;\\n\\n// Import\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\n// Error\\nerror FundMe__NotOwner();\\nerror FundMe_WithdrawFailed();\\n\\n// Interface, Library, Contract\\n/** @title A demo project to learn solidity\\n *  @author tamdc\\n *  @notice Explain to an end user what this does\\n *  @dev Explain to a developer any extra details\\n */\\ncontract FundMe {\\n    // Type declarations\\n    using PriceConverter for uint256;\\n\\n    // State variables\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n    address private immutable i_owner;\\n    uint256 private constant MINIMUM_USD = 5 * 10**18;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    // Events\\n\\n    // Modifiers\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    // Functions\\n\\n    // Contructor\\n    // Recieve function (if exist)\\n    // Fallback function (if exist)\\n    // External\\n    // Public\\n    // Internal\\n    // Private\\n    // View/Pure\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        if (!callSuccess) {\\n            revert FundMe_WithdrawFailed();\\n        }\\n    }\\n\\n    function cheaperWithdraw() public onlyOwner {\\n        address[] memory funders = s_funders;\\n        // mapping (s_addressToAmountFunded) cannot be stored in memomory\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        if (!callSuccess) {\\n            revert FundMe_WithdrawFailed();\\n        }\\n    }\\n\\n    function getAddressToAmountFunded(address funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getFunder(uint256 funderIndex) public view returns (address) {\\n        return s_funders[funderIndex];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x02182914f3c54404be807de76ec839c6a156d5b8bb742ef5fa35b17d03671601\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // Goerli ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        // );\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x71592abac56e937d4585c7faa1f23b2d974df0b38d0bdb3c9925f740897d9af8\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620010df380380620010df83398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b608051610f6d62000172600039600081816102d201526105330152610f6d6000f3fe6080604052600436106100595760003560e01c80630343fb25146100725780633ccfd60b146100af5780639e87a5cd146100c6578063b60d4288146100f1578063be2693f0146100fb578063d7b4750c1461011257610068565b366100685761006661014f565b005b61007061014f565b005b34801561007e57600080fd5b50610099600480360381019061009491906109eb565b610288565b6040516100a69190610a31565b60405180910390f35b3480156100bb57600080fd5b506100c46102d0565b005b3480156100d257600080fd5b506100db610507565b6040516100e89190610aab565b60405180910390f35b6100f961014f565b005b34801561010757600080fd5b50610110610531565b005b34801561011e57600080fd5b5061013960048036038101906101349190610af2565b6107cc565b6040516101469190610b2e565b60405180910390f35b674563918244f4000061018d600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461081490919063ffffffff16565b10156101ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c590610ba6565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461021c9190610bf5565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610355576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104005760006001828154811061037b5761037a610c29565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103f890610c58565b915050610358565b50600067ffffffffffffffff81111561041c5761041b610ca0565b5b60405190808252806020026020018201604052801561044a5781602001602082028036833780820191505090505b50600190805190602001906104609291906108e1565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048790610d00565b60006040518083038185875af1925050503d80600081146104c4576040519150601f19603f3d011682016040523d82523d6000602084013e6104c9565b606091505b5050905080610504576040517f4aba911200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105b6576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561063a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116105f0575b5050505050905060005b81518110156106c457600082828151811061066257610661610c29565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806106bc90610c58565b915050610644565b50600067ffffffffffffffff8111156106e0576106df610ca0565b5b60405190808252806020026020018201604052801561070e5781602001602082028036833780820191505090505b50600190805190602001906107249291906108e1565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161074b90610d00565b60006040518083038185875af1925050503d8060008114610788576040519150601f19603f3d011682016040523d82523d6000602084013e61078d565b606091505b50509050806107c8576040517f4aba911200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6000600182815481106107e2576107e1610c29565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061082083610850565b90506000670de0b6b3a764000085836108399190610d15565b6108439190610d86565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561089e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c29190610e44565b5050509150506402540be400816108d99190610ebf565b915050919050565b82805482825590600052602060002090810192821561095a579160200282015b828111156109595782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610901565b5b509050610967919061096b565b5090565b5b8082111561098457600081600090555060010161096c565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109b88261098d565b9050919050565b6109c8816109ad565b81146109d357600080fd5b50565b6000813590506109e5816109bf565b92915050565b600060208284031215610a0157610a00610988565b5b6000610a0f848285016109d6565b91505092915050565b6000819050919050565b610a2b81610a18565b82525050565b6000602082019050610a466000830184610a22565b92915050565b6000819050919050565b6000610a71610a6c610a678461098d565b610a4c565b61098d565b9050919050565b6000610a8382610a56565b9050919050565b6000610a9582610a78565b9050919050565b610aa581610a8a565b82525050565b6000602082019050610ac06000830184610a9c565b92915050565b610acf81610a18565b8114610ada57600080fd5b50565b600081359050610aec81610ac6565b92915050565b600060208284031215610b0857610b07610988565b5b6000610b1684828501610add565b91505092915050565b610b28816109ad565b82525050565b6000602082019050610b436000830184610b1f565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610b90601b83610b49565b9150610b9b82610b5a565b602082019050919050565b60006020820190508181036000830152610bbf81610b83565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c0082610a18565b9150610c0b83610a18565b9250828201905080821115610c2357610c22610bc6565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610c6382610a18565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c9557610c94610bc6565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cea600083610ccf565b9150610cf582610cda565b600082019050919050565b6000610d0b82610cdd565b9150819050919050565b6000610d2082610a18565b9150610d2b83610a18565b9250828202610d3981610a18565b91508282048414831517610d5057610d4f610bc6565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d9182610a18565b9150610d9c83610a18565b925082610dac57610dab610d57565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610dd681610db7565b8114610de157600080fd5b50565b600081519050610df381610dcd565b92915050565b6000819050919050565b610e0c81610df9565b8114610e1757600080fd5b50565b600081519050610e2981610e03565b92915050565b600081519050610e3e81610ac6565b92915050565b600080600080600060a08688031215610e6057610e5f610988565b5b6000610e6e88828901610de4565b9550506020610e7f88828901610e1a565b9450506040610e9088828901610e2f565b9350506060610ea188828901610e2f565b9250506080610eb288828901610de4565b9150509295509295909350565b6000610eca82610df9565b9150610ed583610df9565b9250828202610ee381610df9565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610f1b57610f1a610bc6565b5b8282058414831517610f3057610f2f610bc6565b5b509291505056fea26469706673582212205adf05cbe99e7df060aa5a2467357315899326963cc71b4d9742cc6f883337bd64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100595760003560e01c80630343fb25146100725780633ccfd60b146100af5780639e87a5cd146100c6578063b60d4288146100f1578063be2693f0146100fb578063d7b4750c1461011257610068565b366100685761006661014f565b005b61007061014f565b005b34801561007e57600080fd5b50610099600480360381019061009491906109eb565b610288565b6040516100a69190610a31565b60405180910390f35b3480156100bb57600080fd5b506100c46102d0565b005b3480156100d257600080fd5b506100db610507565b6040516100e89190610aab565b60405180910390f35b6100f961014f565b005b34801561010757600080fd5b50610110610531565b005b34801561011e57600080fd5b5061013960048036038101906101349190610af2565b6107cc565b6040516101469190610b2e565b60405180910390f35b674563918244f4000061018d600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461081490919063ffffffff16565b10156101ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c590610ba6565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461021c9190610bf5565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610355576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104005760006001828154811061037b5761037a610c29565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103f890610c58565b915050610358565b50600067ffffffffffffffff81111561041c5761041b610ca0565b5b60405190808252806020026020018201604052801561044a5781602001602082028036833780820191505090505b50600190805190602001906104609291906108e1565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048790610d00565b60006040518083038185875af1925050503d80600081146104c4576040519150601f19603f3d011682016040523d82523d6000602084013e6104c9565b606091505b5050905080610504576040517f4aba911200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105b6576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561063a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116105f0575b5050505050905060005b81518110156106c457600082828151811061066257610661610c29565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806106bc90610c58565b915050610644565b50600067ffffffffffffffff8111156106e0576106df610ca0565b5b60405190808252806020026020018201604052801561070e5781602001602082028036833780820191505090505b50600190805190602001906107249291906108e1565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161074b90610d00565b60006040518083038185875af1925050503d8060008114610788576040519150601f19603f3d011682016040523d82523d6000602084013e61078d565b606091505b50509050806107c8576040517f4aba911200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6000600182815481106107e2576107e1610c29565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061082083610850565b90506000670de0b6b3a764000085836108399190610d15565b6108439190610d86565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561089e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c29190610e44565b5050509150506402540be400816108d99190610ebf565b915050919050565b82805482825590600052602060002090810192821561095a579160200282015b828111156109595782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610901565b5b509050610967919061096b565b5090565b5b8082111561098457600081600090555060010161096c565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109b88261098d565b9050919050565b6109c8816109ad565b81146109d357600080fd5b50565b6000813590506109e5816109bf565b92915050565b600060208284031215610a0157610a00610988565b5b6000610a0f848285016109d6565b91505092915050565b6000819050919050565b610a2b81610a18565b82525050565b6000602082019050610a466000830184610a22565b92915050565b6000819050919050565b6000610a71610a6c610a678461098d565b610a4c565b61098d565b9050919050565b6000610a8382610a56565b9050919050565b6000610a9582610a78565b9050919050565b610aa581610a8a565b82525050565b6000602082019050610ac06000830184610a9c565b92915050565b610acf81610a18565b8114610ada57600080fd5b50565b600081359050610aec81610ac6565b92915050565b600060208284031215610b0857610b07610988565b5b6000610b1684828501610add565b91505092915050565b610b28816109ad565b82525050565b6000602082019050610b436000830184610b1f565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610b90601b83610b49565b9150610b9b82610b5a565b602082019050919050565b60006020820190508181036000830152610bbf81610b83565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c0082610a18565b9150610c0b83610a18565b9250828201905080821115610c2357610c22610bc6565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610c6382610a18565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c9557610c94610bc6565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cea600083610ccf565b9150610cf582610cda565b600082019050919050565b6000610d0b82610cdd565b9150819050919050565b6000610d2082610a18565b9150610d2b83610a18565b9250828202610d3981610a18565b91508282048414831517610d5057610d4f610bc6565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d9182610a18565b9150610d9c83610a18565b925082610dac57610dab610d57565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610dd681610db7565b8114610de157600080fd5b50565b600081519050610df381610dcd565b92915050565b6000819050919050565b610e0c81610df9565b8114610e1757600080fd5b50565b600081519050610e2981610e03565b92915050565b600081519050610e3e81610ac6565b92915050565b600080600080600060a08688031215610e6057610e5f610988565b5b6000610e6e88828901610de4565b9550506020610e7f88828901610e1a565b9450506040610e9088828901610e2f565b9350506060610ea188828901610e2f565b9250506080610eb288828901610de4565b9150509295509295909350565b6000610eca82610df9565b9150610ed583610df9565b9250828202610ee381610df9565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610f1b57610f1a610bc6565b5b8282058414831517610f3057610f2f610bc6565b5b509291505056fea26469706673582212205adf05cbe99e7df060aa5a2467357315899326963cc71b4d9742cc6f883337bd64736f6c63430008110033",
  "devdoc": {
    "author": "tamdc",
    "details": "Explain to a developer any extra details",
    "kind": "dev",
    "methods": {},
    "title": "A demo project to learn solidity",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Explain to an end user what this does",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 324,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 327,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 339,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)102"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)102": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}